!function(i,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("InquiryMonad",[],n):"object"==typeof exports?exports.InquiryMonad=n():i.InquiryMonad=n()}(window,function(){return function(i){var n={};function o(s){if(n[s])return n[s].exports;var a=n[s]={i:s,l:!1,exports:{}};return i[s].call(a.exports,a,a.exports,o),a.l=!0,a.exports}return o.m=i,o.c=n,o.d=function(i,n,s){o.o(i,n)||Object.defineProperty(i,n,{configurable:!1,enumerable:!0,get:s})},o.r=function(i){Object.defineProperty(i,"__esModule",{value:!0})},o.n=function(i){var n=i&&i.__esModule?function(){return i.default}:function(){return i};return o.d(n,"a",n),n},o.o=function(i,n){return Object.prototype.hasOwnProperty.call(i,n)},o.p="",o(o.s=1)}([function(i,n){const o=i=>({isJust:!0,isNothing:!1,inspect:n=>`Just(${i})`,map:n=>a.of(n(i)),ap:n=>n.map(i),chain:n=>n(i),join:n=>i,fork:(n,o)=>o(i),sequence:n=>i.map(a.of)}),s=i=>({isJust:!1,isNothing:!0,inspect:i=>"Nothing",map:i=>s(),ap:i=>s(),chain:i=>s(),join:i=>s(),fork:(i,n)=>i(),sequence:i=>i(s())}),a={of:i=>null===i||void 0===i?s():o(i)};i.exports={Maybe:a,Nothing:s,Just:o}},function(i,n,o){"use strict";var s=this&&this.__awaiter||function(i,n,o,s){return new(o||(o=Promise))(function(a,t){function e(i){try{u(s.next(i))}catch(i){t(i)}}function r(i){try{u(s.throw(i))}catch(i){t(i)}}function u(i){i.done?a(i.value):new o(function(n){n(i.value)}).then(e,r)}u((s=s.apply(i,n||[])).next())})};Object.defineProperty(n,"__esModule",{value:!0});const a=o(0),t=i=>({map:n=>t(n(i)),chain:n=>n(i),ap:n=>n.map(i),inspect:()=>`IOU(${i})`,join:()=>i,concat:n=>n.chain(n=>t(i.concat(n))),head:()=>Array.isArray(i)&&i.length?i[0]:[],tail:()=>Array.isArray(i)&&i.length?i[i.length-1]:[],isEmpty:()=>Boolean(!Array.isArray(i)||0===i.length),isInquiry:!1,isPass:!1,isFail:!1,isIOU:!0});n.IOU=t;const e=i=>({map:n=>e(n(i)),chain:n=>n(i),fold:(n,o)=>n(i),fork:(n,o)=>o(i),head:()=>Array.isArray(i)&&i.length?i[0]:[],tail:()=>Array.isArray(i)&&i.length?i[i.length-1]:[],join:()=>i,inspect:()=>`Pass(${i})`,concat:n=>n.fold(n=>e(i.concat(n)),null),ap:n=>n.isPass?n.concat(e(i)):e(i),answer:(n,o="(anonymous)",s=c)=>(n.informant([o,e(i)]),s({subject:n.subject,fail:n.fail,iou:n.iou,pass:n.pass.concat(e(i)),informant:n.informant})),isEmpty:()=>Boolean(!Array.isArray(i)||0===i.length),isPass:!0,isFail:!1,isIOU:!1,isInquiry:!1});n.Pass=e;const r=i=>({map:n=>r(n(i)),chain:n=>n(i),fold:(n,o)=>o(i),fork:(n,o)=>n(i),head:()=>Array.isArray(i)&&i.length?i[0]:[],tail:()=>Array.isArray(i)&&i.length?i[i.length-1]:[],join:()=>i,inspect:()=>`Fail(${i})`,concat:n=>n.fork(n=>r(i.concat(n)),null),ap:n=>n.isPass?r(i):n.concat(r(i)),answer:(n,o="(anonymous)",s=c)=>(n.informant([o,r(i)]),s({subject:n.subject,fail:n.fail.concat(r(i)),pass:n.pass,iou:n.iou,informant:n.informant})),isEmpty:()=>Boolean(!Array.isArray(i)||0===i.length),isPass:!1,isFail:!0,isIOU:!1,isInquiry:!1});n.Fail=r;const u=i=>i.isInquiry?i:c({subject:a.Maybe.of(i),fail:r([]),pass:e([]),iou:t([]),informant:i=>i}),c=i=>({inquire:n=>{const o=n(i.subject.join());return o.isFail||o.isPass||o.isInquiry?o.answer(i,n.name,c):e(o)},informant:n=>c({subject:i.subject,iou:i.iou,fail:i.fail,pass:i.pass,informant:n}),inspect:()=>`Inquiry(${i.fail.inspect()} ${i.pass.inspect()} ${i.iou.inspect()}`,swap:()=>c({subject:i.subject,iou:i.iou,fail:r(i.pass.join()),pass:e(i.fail.join()),informant:i.informant}),unison:n=>c({subject:i.subject,iou:i.iou,fail:r(n(i.fail.join())),pass:e(n(i.pass.join())),informant:i.informant}),map:n=>u(n(i)),ap:n=>n.map(i),chain:n=>n(i),join:()=>i,breakpoint:n=>i.fail.join().length?n(i):c(i),milestone:n=>i.pass.join().length?n(i):c(i),answer:(n,o,s)=>(n.informant([o,c(i)]),c({subject:n.subject,iou:n.iou,fail:n.fail.concat(i.fail),pass:n.pass.concat(i.pass),informant:n.informant})),conclude:(n,o)=>({subject:i.subject,iou:i.iou,fail:n(i.fail),pass:o(i.pass),informant:i.informant}),cleared:n=>i.fail.isEmpty()?n(i.pass):c(i),faulted:n=>i.fail.isEmpty()?c(i):n(i.fail),fork:(n,o)=>i.fail.join().length?n(i.fail):o(i.pass),zip:n=>n(i.fail.join().concat(i.pass.join())),isInquiry:!0}),f={subject:u,of:i=>"subject"in i&&"fail"in i&&"pass"in i&&"iou"in i&&"informant"in i?c(i):(i=>(console.warn("Inquiry.of requires properties: subject, fail, pass, iou, informant. Converting to Inquiry.subject()."),u(i)))(i)};n.Inquiry=f;const l=i=>i.isInquiry?i:m({subject:a.Maybe.of(i),fail:r([]),pass:e([]),iou:t([]),informant:i=>i}),p=i=>"subject"in i&&"fail"in i&&"pass"in i&&"iou"in i&&"informant"in i?m(i):(i=>(console.warn("InquiryP.of requires properties: subject, fail, pass, iou, informant. Converting to InquiryP.subject()."),l(i)))(i),j=i=>n=>n.reduce((n,o)=>o.answer(i,"(async fn)",m),i),m=i=>({inquire:n=>{const o=n(i.subject.join());return o.then?m({subject:i.subject,fail:i.fail,pass:i.pass,iou:i.iou.concat(t([o])),informant:i.informant}):(o=>o.isFail||o.isPass||o.isInquiry?o.answer(i,n.name,m):e(o))(o)},informant:n=>m({subject:i.subject,iou:i.iou,fail:i.fail,pass:i.pass,informant:n}),inspect:()=>`InquiryP(${i.fail.inspect()} ${i.pass.inspect()} ${i.iou.inspect()}`,swap:()=>m({subject:i.subject,iou:i.iou,fail:r(i.pass.join()),pass:e(i.fail.join()),informant:i.informant}),unison:n=>m({subject:i.subject,iou:i.iou,fail:r(n(i.fail.join())),pass:e(n(i.pass.join())),informant:i.informant}),map:n=>l(n(i)),ap:n=>n.map(i),chain:n=>n(i),join:()=>i,breakpoint:n=>i.fail.join().length?n(i):m(i),milestone:n=>i.pass.join().length?n(i):m(i),answer:(n,o,s)=>(n.informant([o,m(i)]),m({subject:n.subject,iou:n.iou,fail:n.fail.concat(i.fail),pass:n.pass.concat(i.pass),informant:n.informant})),conclude:(n,o)=>s(this,void 0,void 0,function*(){return Promise.all(i.iou.join()).then(j(i)).then(i=>i.isInquiry?i.join():i).then(i=>({subject:i.subject,iou:i.iou,fail:n(i.fail),pass:o(i.pass),informant:i.informant}))}),cleared:n=>s(this,void 0,void 0,function*(){return Promise.all(i.iou.join()).then(j(i)).then(i=>i.isInquiry?i.join():i).then(i=>i.fail.isEmpty()?n(i.pass):m(i)).catch(i=>console.error("err",i))}),faulted:n=>s(this,void 0,void 0,function*(){return Promise.all(i.iou.join()).then(j(i)).then(i=>i.isInquiry?i.join():i).then(i=>i.fail.isEmpty()?m(i):n(i.fail))}),fork:(n,o)=>s(this,void 0,void 0,function*(){return Promise.all(i.iou.join()).then(j(i)).then(i=>i.isInquiry?i.join():i).then(i=>i.fail.join().length?n(i.fail):o(i.pass))}),zip:n=>s(this,void 0,void 0,function*(){return Promise.all(i.iou.join()).then(j(i)).then(i=>i.isInquiry?i.join():i).then(i=>n(i.fail.join().concat(i.pass.join())))}),await:(n=1/0)=>s(this,void 0,void 0,function*(){const o=new Promise((i,o)=>setTimeout(i,n,[r("Promise(s) have timed out")])),s=Promise.all(i.iou.join());return Promise.race([o,s]).then(j(i)).then(i=>i.isInquiry?i.join():i).then(i=>p(i))}),isInquiry:!0}),y={subject:l,of:p};n.InquiryP=y}])});
//# sourceMappingURL=inquiry-monad.min.js.map